==121334== Memcheck, a memory error detector
==121334== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==121334== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==121334== Command: ./server
==121334== Parent PID: 89256
==121334== 
==121334== Conditional jump or move depends on uninitialised value(s)
==121334==    at 0x408425: addfd(int, int, bool, int) (http_conn.cpp:85)
==121334==    by 0x4085D0: http_conn::init(int, sockaddr_in const&, char*, int, int, std::string, std::string, std::string) (http_conn.cpp:140)
==121334==    by 0x4C3DA8: WebServer::timer(int, sockaddr_in) (webserver.cpp:188)
==121334==    by 0x4C414A: WebServer::dealclientdata() (webserver.cpp:247)
==121334==    by 0x4C47D0: WebServer::eventLoop() (webserver.cpp:433)
==121334==    by 0x40648D: main (main.cpp:49)
==121334== 
==121334== Conditional jump or move depends on uninitialised value(s)
==121334==    at 0x44153C: http_conn::unmap() (http_conn.cpp:5580)
==121334==    by 0x441762: http_conn::write() (http_conn.cpp:5631)
==121334==    by 0x4C4659: WebServer::dealwithwrite(int) (webserver.cpp:393)
==121334==    by 0x4C4959: WebServer::eventLoop() (webserver.cpp:462)
==121334==    by 0x40648D: main (main.cpp:49)
==121334== 
==121334== Syscall param writev(vector[...]) points to unaddressable byte(s)
==121334==    at 0x619C5D0: writev (in /usr/lib64/libc-2.17.so)
==121334==    by 0x4415F5: http_conn::write() (http_conn.cpp:5601)
==121334==    by 0x4C4659: WebServer::dealwithwrite(int) (webserver.cpp:393)
==121334==    by 0x4C4959: WebServer::eventLoop() (webserver.cpp:462)
==121334==    by 0x40648D: main (main.cpp:49)
==121334==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==121334== 
==121334== 
==121334== Process terminating with default action of signal 2 (SIGINT)
==121334==    at 0x61A60E3: ??? (in /usr/lib64/libc-2.17.so)
==121334==    by 0x4C4732: WebServer::eventLoop() (webserver.cpp:418)
==121334==    by 0x40648D: main (main.cpp:49)
==121334== 
==121334== HEAP SUMMARY:
==121334==     in use at exit: 37,703,005 bytes in 2,402 blocks
==121334==   total heap usage: 133,300 allocs, 130,898 frees, 73,775,590 bytes allocated
==121334== 
==121334== LEAK SUMMARY:
==121334==    definitely lost: 0 bytes in 0 blocks
==121334==    indirectly lost: 0 bytes in 0 blocks
==121334==      possibly lost: 5,184 bytes in 9 blocks
==121334==    still reachable: 37,697,821 bytes in 2,393 blocks
==121334==                       of which reachable via heuristic:
==121334==                         stdstring          : 99,405 bytes in 2,149 blocks
==121334==                         newarray           : 37,104,008 bytes in 1 blocks
==121334==         suppressed: 0 bytes in 0 blocks
==121334== Rerun with --leak-check=full to see details of leaked memory
==121334== 
==121334== Use --track-origins=yes to see where uninitialised values come from
==121334== For lists of detected and suppressed errors, rerun with: -s
==121334== ERROR SUMMARY: 14 errors from 3 contexts (suppressed: 0 from 0)
